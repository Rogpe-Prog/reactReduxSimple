{"version":3,"sources":["balanceReducer.js","balanceAction.js","App.js","index.js"],"names":["initialState","balance","valueBalance","plus","type","minus","balanceChanged","e","payload","target","value","connect","state","dispatch","bindActionCreators","props","className","onChange","onClick","reducers","combineReducers","action","ReactDOM","render","store","createStore","document","getElementById"],"mappings":"sxBAAA,IAAMA,EAAe,CAAEC,QAAS,IAAKC,aAAc,G,MCA5C,SAASC,IACZ,MAAO,CAAEC,KAAM,QAEZ,SAASC,IACZ,MAAO,CAAED,KAAM,SAEZ,SAASE,EAAeC,GAC3B,MAAO,CACHH,KAAM,kBACNI,QAASD,EAAEE,OAAOC,OCD1B,IAoBeC,eAHS,SAAAC,GAAK,MAAK,CAAEX,QAASW,EAAMX,YACvB,SAAAY,GAAQ,OAAIC,YAAmB,CAAEX,OAAME,QAAOC,kBAAkBO,KAE7EF,EApBH,SAAAI,GAAK,OAEb,yBAAKC,UAAU,OACb,oDACA,iCAAOD,EAAMd,QAAQA,SAErB,2BAAOgB,SAAUF,EAAMT,eACrBI,MAAOK,EAAMd,QAAQC,aACrBE,KAAK,WAEP,6BACE,4BAAQc,QAASH,EAAMZ,MAAvB,OACA,4BAAQe,QAASH,EAAMV,OAAvB,YCXFc,EAAWC,YAAgB,CAC7BnB,QHRW,WAAwC,IAA/BW,EAA8B,uDAAtBZ,EAAcqB,EAAQ,uCAClD,OAAQA,EAAOjB,MACX,IAAK,OACD,OAAO,EAAP,GAAYQ,EAAZ,CAAmBX,QAASW,EAAMX,QAAUW,EAAMV,eACtD,IAAK,QACD,OAAO,EAAP,GAAYU,EAAZ,CAAmBX,QAASW,EAAMX,QAAUW,EAAMV,eACtD,IAAK,kBACD,OAAO,EAAP,GAAYU,EAAZ,CAAmBV,cAAgBmB,EAAOb,UAC9C,QACI,OAAOI,MGEnBU,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYN,IACzB,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.d6c4131d.chunk.js","sourcesContent":["const initialState = { balance: 100, valueBalance: 0 }\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'PLUS':\r\n            return { ...state, balance: state.balance + state.valueBalance }\r\n        case 'MINUS':\r\n            return { ...state, balance: state.balance - state.valueBalance }\r\n        case 'BALANCE_CHANGED':\r\n            return { ...state, valueBalance: + action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","export function plus() {\r\n    return { type: 'PLUS' }\r\n}\r\nexport function minus() {\r\n    return { type: 'MINUS' }\r\n}\r\nexport function balanceChanged(e) {\r\n    return {\r\n        type: 'BALANCE_CHANGED',\r\n        payload: e.target.value\r\n    }\r\n}","import React from 'react';\nimport './App.css';\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { plus, minus, balanceChanged } from './balanceAction'\n\nconst App = props => (\n\n    <div className=\"App\">\n      <h2>Balance Account Bank</h2>\n      <h2>$ {props.balance.balance}</h2>\n\n      <input onChange={props.balanceChanged}\n        value={props.balance.valueBalance}\n        type=\"number\" />\n\n      <div>\n        <button onClick={props.plus}> + </button>\n        <button onClick={props.minus}> - </button>\n      </div>\n    </div>\n)\n\nconst mapStateToProps = state => ({ balance: state.balance })\nconst mapDispatchToProps  = dispatch => bindActionCreators({ plus, minus, balanceChanged }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { combineReducers, createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport balanceReducer from './balanceReducer'\nimport Balance from './App'\n\nconst reducers = combineReducers({\n    balance: balanceReducer\n})\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <Balance />\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}